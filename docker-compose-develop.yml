services:
  php:
    build:
      context: .
      dockerfile: ./docker/develop/Dockerfile
    container_name: reserspot-php
    image: reserspot-back
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - .:/var/www/html
      - ./docker/develop/php/develop.ini:/usr/local/etc/php/php.ini
    ports:
      - "9002:9000"
    networks:
      - reserspot-back
  vite:
    container_name: reserspot-vite
    image: reserspot-back
    user: laravel
    volumes:
      - .:/var/www/html
    ports:
      - "5173:5173"
    command: npm run dev
    working_dir: /var/www/html
    networks:
      - reserspot-back
  nginx:
    image: nginx:latest
    container_name: reserspot-nginx
    restart: unless-stopped
    expose:
      - 80
    environment:
      VIRTUAL_HOST: "reserspot.test"
    volumes:
      - .:/var/www/html
      - ./docker/develop/nginx/develop.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - redis
    networks:
      - nginx-proxy
      - reserspot-back
  pgsql:
    image: 'postgres:17'
    container_name: reserspot-pgsql
    ports:
      - '${FORWARD_DB_PORT:-5432}:5432'
    environment:
      PGPASSWORD: '${DB_PASSWORD:-secret}'
      POSTGRES_DB: '${DB_DATABASE}'
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
    volumes:
      - './docker/develop/pgsql/data:/var/lib/postgresql/data'
      - './docker/develop/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
    networks:
      - reserspot-back
    healthcheck:
      test:
        - CMD
        - pg_isready
        - '-q'
        - '-d'
        - '${DB_DATABASE}'
        - '-U'
        - '${DB_USERNAME}'
      retries: 3
      timeout: 5s
  redis:
    image: redis:latest
    container_name: reserspot-redis
    ports:
      - "6379:6379"
    networks:
      - reserspot-back
  mailpit:
    image: axllent/mailpit
    container_name: reserspot-mailpit
    volumes:
      - ./docker/develop/mailpit/data:/data
    ports:
      - 8025:8025
      - 1025:1025
    networks:
      - reserspot-back
    environment:
      MP_MAX_MESSAGES: 5000
      MP_DATABASE: /data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
  cron:
    container_name: reserspot-cron
    image: reserspot-back
    volumes:
      - .:/var/www/html
      - ./docker/develop/cron/laravel:/var/spool/cron/crontabs/laravel
    command: [ "crond", "-f" ]
    restart: always
    user: root
    depends_on:
      - php
      - redis
    networks:
      - reserspot-back
  horizon:
    container_name: reserspot-horizon
    image: reserspot-back
    volumes:
      - .:/var/www/html
    command: [ "php", "artisan", "horizon" ]
    user: laravel
    depends_on:
      - php
      - redis
    networks:
      - reserspot-back
  pulse:
    container_name: reserspot-pulse
    image: reserspot-back
    volumes:
      - .:/var/www/html
    command: [ "php", "artisan", "pulse:check" ]
    user: laravel
    depends_on:
      - php
      - redis
    networks:
      - reserspot-back
  reverb:
    container_name: reserspot-reverb
    image: reserspot-back
    volumes:
      - .:/var/www/html
    command: ["php", "artisan", "reverb:start", "--debug"]
    user: laravel
    expose:
      - "8080"
    environment:
        VIRTUAL_HOST: reverb.reserspot.test
        VIRTUAL_PORT: 8080
    depends_on:
      - php
      - redis
    networks:
      - nginx-proxy
      - reserspot-back
  typesense:
    image: 'typesense/typesense:0.25.2'
    container_name: reserspot-typesense
    ports:
      - '${FORWARD_TYPESENSE_PORT:-8108}:8108'
    environment:
      TYPESENSE_DATA_DIR: '${TYPESENSE_DATA_DIR:-/typesense-data}'
      TYPESENSE_API_KEY: '${TYPESENSE_API_KEY:-xyz}'
      TYPESENSE_ENABLE_CORS: '${TYPESENSE_ENABLE_CORS:-true}'
    volumes:
      - 'sail-typesense:/typesense-data'
    networks:
      - nginx-proxy
      - reserspot-back
    healthcheck:
      test:
        - CMD
        - wget
        - '--no-verbose'
        - '--spider'
        - 'http://reserspot.test:8108/health'
      retries: 5
      timeout: 7s
  selenium:
    image: 'seleniarm/standalone-chromium'
    container_name: reserspot-selenium
    extra_hosts:
      - 'host.docker.internal:host-gateway'
      - 'reserspot.test:host-gateway'
    volumes:
      - '/dev/shm:/dev/shm'
    networks:
      - nginx-proxy
      - reserspot-back
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: reserspot-pgadmin
    restart: unless-stopped
    expose:
      - 80
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
      VIRTUAL_HOST: pgadmin.reserspot.test
      VIRTUAL_PORT: 80
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
      PGADMIN_SERVER_JSON_FILE: /pgadmin4/servers.json
    volumes:
      - './docker/develop/pgadmin:/var/lib/pgadmin'
      - ./docker/develop/pgadmin/servers/servers.json:/pgadmin4/servers.json
    depends_on:
      - pgsql
    networks:
      - nginx-proxy
      - reserspot-back

#  mysql:
#    image: 'mysql:8.0'
#    container_name: reserspot-mysql
#    ports:
#      - '3306:3306'
#    environment:
#      MYSQL_DATABASE: '${DB_DATABASE:-reserspot}'
#      MYSQL_USER: '${DB_USERNAME:-reserspot}'
#      MYSQL_PASSWORD: '${DB_PASSWORD:-password}'
#      MYSQL_ROOT_PASSWORD: 'root_password'
#    volumes:
#      - './docker/develop/mysql/data:/var/lib/mysql'
#    networks:
#      - reserspot-back
#    healthcheck:
#      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
#      retries: 3
#      timeout: 5s
#
#  phpmyadmin:
#    image: phpmyadmin:latest
#    container_name: reserspot-phpmyadmin
#    restart: unless-stopped
#    expose:
#      - 80
#    environment:
#      PMA_HOST: mysql
#      PMA_PORT: 3306
#      VIRTUAL_HOST: phpmyadmin.reserspot.test
#      VIRTUAL_PORT: 80
#    depends_on:
#      - mysql
#    networks:
#      - nginx-proxy
#      - reserspot-back

networks:
  nginx-proxy:
    external: true
  reserspot-back:
    name: reserspot-back

volumes:
  sail-typesense:
    driver: local
  pgadmin-data:
    driver: local
  mysql-data:
    driver: local
